% Compute the Chebyshev center of a polyhedron
function [x_sol, r_sol, x, y] = chebyshev_center_2(A, b, p)
% The goal is to find the largest Euclidean ball (i.e. its center and
% radius) that lies in a polyhedron described by linear inequalites in this
% fashion: P = {x : a_i'*x <= b_i, i=1,...,m}

% Generate the data
% randn('state',0);
% n = 10; m = 2*n;
% A = randn(m,n);
% b = A*rand(n,1) + 2*rand(m,1);

rng('default')
format long g
[~,n]=size(A);

% Build and execute model
fprintf(1,'Computing Chebyshev center...');
cvx_begin
    variable r(1)
    variable x_c(2)
    dual variable y
    maximize ( r )
    for k=1:n
        A(:, k)' * x_c + r * norm(A(:, k),p) <= b(k);
    end
cvx_end
fprintf(1,'Done! \n');
x_sol = x_c;
r_sol = r;


% Display results
fprintf(1,'The Chebyshev center coordinates are: \n');
disp(x_c);
fprintf(1,'The radius of the largest scaled unit ball is: \n');
disp(r);

% Generate the figure
x = linspace(-2,2);
for k=1:n
    plot(x, -x * A(1,k)./A(2,k) + b(k)./A(2,k),"b-");
    hold on
end

n = 100;
[x, y] = gen_random_vectors(n, p);
x = x.* r + x_c(1);
y = y.* r + x_c(2);

for i=1:n
    plot(x(i), y(i), "r." );
    hold on
end
plot(x_c(1),x_c(2),'b*');
xlabel("x_1")
ylabel("x_2")

txt = "# inequalities:" + num2str(n);
title({"Largest scaled ball lying in a 2D polyhedron", txt});
text(x_c(1), x_c(2), "\leftarrow  center")
axis([-1 1 -1 1])
axis equal
hold off

function [x, y] = gen_random_vectors(n, p)
    if (isinf(p))
        pnorm = 1;
    else
        pnorm = p;
    end
    r = randn(2,n); % Use a large n
    norm_r = (sum(abs(r).^pnorm,1)).^(1/pnorm);
    r = r./norm_r;
    %r = bsxfun(@rdivide, r, norm_r);
    x = r(1,:);
    y = r(2,:);

function [x, y] = gen_random_vectors_2(n, p)
    r = randn(2, n)'; % Use a large n
    x = r(1,:);
    norm_r_x = norm(x, p);
    x = x ./ norm_r_x;
    %x = bsxfun(@rdivide, x, norm_r_x);
    y = r(2,:);
    norm_r_y = norm(y, p);
    y = y ./ norm_r_y;
    %y = bsxfun(@rdivide, y, norm_r_y);
